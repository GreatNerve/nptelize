version: "3.9"

services:
  server:
    build: ./backend
    container_name: fastapi-server
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env
    environment:
      # these variables should be in top level .env
      - DB_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT}/${POSTGRES_DB}
      - ASYNC_DB_URI=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT}/${POSTGRES_DB}
    volumes:
      - /var/lib/avlokan/certificates:/server/certificates
      - /var/log/avlokan:/server/logs
    cpus: ${SERVER_CPUS}   # cpu limit -> only for deployments
    depends_on:
      - migrate

  frontend:
    build: 
      context: ./frontend
    container_name: avlokan-react-app
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env
    cpus: 1.0
    depends_on:
      - server
      
  db:
    image: postgres:17-alpine
    container_name: postgres-db
    ports:
      - 5432:5432
    env_file:
      - ./backend/.env
    environment:
      # these variables should be in top level .env
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /var/lib/avlokan/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  migrate:
    build: ./backend
    container_name: migration-runner
    environment:
      - DB_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT}/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    command: alembic upgrade head